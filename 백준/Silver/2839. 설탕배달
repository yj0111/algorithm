import java.util.Arrays;
import java.util.Scanner;

public class Main {
	//DP로 푼거
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] dp = new int[n + 1];
		Arrays.fill(dp, Integer.MAX_VALUE); // dp 배열의 값을 큰 값으로 초기화
		dp[0] = 0; // dp[0]은 0으로 초기화

		for (int i = 3; i <= n; i++) { // 3kg 봉지 사용
			if (dp[i - 3] != Integer.MAX_VALUE) {
				dp[i] = Math.min(dp[i], dp[i - 3] + 1);
			}
		}
		for (int i = 5; i <= n; i++) { // 5kg 봉지 사용
			if (dp[i - 5] != Integer.MAX_VALUE) {
				dp[i] = Math.min(dp[i], dp[i - 5] + 1);
			}
		}
		if (dp[n] == Integer.MAX_VALUE) { // 봉지로 N kg을 만들 수 없는 경우
			System.out.println("-1");
		} else {
			System.out.println(dp[n]); // 최소한의 봉지 수 출력
		}
	}
}

/* DP아니고 다른방법으로 푼거 
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		//설탕 N킬로
		int N = sc.nextInt();

		//봉지
		int bag = 0;

		//최대한 적은 봉지
		//일단 5kg로 나누기
		while(true) {

			if(N % 5 == 0) {
				bag += N/5;
				break;
			}else { 
				// 5kg로 안나눠지면.. 3Kg로 나누기
					N = N-3;
					bag++; 
				}
			//정확하게 안나눠지면  
			if(N < 0){
					bag = -1;
					break;
				}
		}
		System.out.println(bag);
	}
}
*/
